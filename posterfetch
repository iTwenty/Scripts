#! /usr/bin/env python2

import os
import sys
import string
import re
import urllib
import simplejson as json

VERBOSE = True

def getPoster( mTitle, mYear ):
    mTitle = urllib.quote( mTitle.lower() )
    url = "http://imdbapi.com/?t=%s&y=%s&r=json" % ( mTitle, mYear )
    
    if VERBOSE == True: print "URL:\t\t%s" % (url)

    try:
        reply = urllib.urlopen( url )
    except:
        if VERBOSE == True: print "IMDb server not replying. Exiting."
        exit( 4 )

    movieInfo = json.load( reply )
    posterUrl = movieInfo["Poster"]

    if VERBOSE == True: print "Poster URL:\t%s" % ( posterUrl )

    try:
        posterReply = urllib.urlopen( posterUrl )
    except:
        if VERBOSE == True: print "Cannot fetch poster. Exiting."
        exit( 5 )

    poster = posterReply.read()
    posterName =  "Poster" + posterUrl[-4:]
    fout = open( posterName, "wb" )
    fout.write( poster )
    fout.close()

    if VERBOSE == True: print "Poster Saved! Exiting"

def main():
    if len( sys.argv ) != 2:
        if VERBOSE== True: print "Invalid number of arguments"
        exit( 1 )
    
    filePath = sys.argv[1]

    try:
        os.stat( filePath )
    except:
        if VERBOSE == True: print "Not a valid path"
        exit( 2 )

    if string.find( filePath, "/" ) == -1:
        movieName = filePath
    else:
        movieName = string.rsplit( filePath, "/", 1 )[-1]
    movieName.

    if VERBOSE == True: print "Movie Name:\t%s" % (movieName)
    
    validName = re.compile( r'(.*) \((\d\d\d\d)\)\..{3,4}' )
    p = validName.match( movieName )

    if not p:
        if VERBOSE == True: print "Regex match:\tFail"
        exit( 3 )

    movieTitle = p.group( 1 )
    movieYear  = p.group( 2 )

    if VERBOSE == True:
        print "Title:\t\t%s\nYear:\t\t%s" % (movieTitle, movieYear)

    getPoster( movieTitle, movieYear ) # movieName is passed to set name of received poster

if __name__ == "__main__":
    main()
